{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tHeader","tHead","rows","headerCells","cells","tBody","tBodies","children","notificationTimer","sortOrder","sortColumn","form","createElement","notification","notificationTitle","notificationMessage","convertToNumber","string","parseInt","replace","formatSalary","salary","Intl","NumberFormat","style","currency","minimumFractionDigits","format","showNotification","type","title","message","hideNotification","classList","add","innerText","innerHTML","body","append","setTimeout","clearTimeout","remove","addEmployee","name","position","office","age","insertAdjacentHTML","saveValue","cell","input","defaultValue","textContent","value","handleTableHeadClick","e","clickedLabel","indexOf","target","sort","a","b","firstValue","secondValue","number1","number2","isNaN","localeCompare","reverse","handleTableRowClick","clickedRow","parentNode","forEach","row","handleFormSubmit","preventDefault","elements","errors","formData","formElement","includes","tagName","required","minLength","min","max","push","length","parseFloat","join","reset","handleFinishEdit","keyCode","handleTableCellDblclick","focus","addEventListener","inputEvent","noValidate"],"mappings":"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","file":"main.cc354d64.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n/**\n * Global variables\n */\nconst table = document.querySelector('table');\nconst tHeader = table.tHead.rows[0];\nconst headerCells = [...tHeader.cells];\nconst tBody = table.tBodies[0];\nconst rows = [...tBody.children];\nlet notificationTimer = null;\nlet sortOrder = 'ASC';\nlet sortColumn = null;\n\n/**\n * Dynamically created elements\n */\nconst form = document.createElement('form');\nconst notification = document.createElement('div');\nconst notificationTitle = document.createElement('h2');\nconst notificationMessage = document.createElement('span');\n\nform.noValidate = true;\nform.classList.add('new-employee-form');\ndocument.body.append(form);\n\nnotification.classList.add('notification');\nnotificationTitle.classList.add('title');\nnotification.append(notificationTitle, notificationMessage);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Name:\n    <input name=\"name\" type=\"text\" required minLength=\"4\">\n  </label>\n  <label>Position:\n    <input name=\"position\" type=\"text\" required>\n  </label>\n  <label>Office:\n  <select name=\"office\" required>\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New York\">New York</option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n  </select>\n  </label>\n  <label>Age:\n    <input name=\"age\" type=\"number\" required min=\"18\" max=\"90\">\n  </label>\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>`\n);\n\n/**\n * Helper functions and handlers\n */\nfunction convertToNumber(string) {\n  return parseInt(string.replace(/[^0-9]/g, ''));\n}\n\nfunction formatSalary(salary) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  }).format(salary);\n}\n\nfunction showNotification({ type, title, message }) {\n  hideNotification();\n\n  // Add a notification type class\n  notification.classList.add(type);\n  notificationTitle.innerText = title;\n  notificationMessage.innerHTML = message;\n  document.body.append(notification);\n\n  notificationTimer = setTimeout(hideNotification, 5000);\n}\n\nfunction hideNotification() {\n  clearTimeout(notificationTimer);\n  // Make sure we delete old notification type class\n  notification.classList.remove('warning', 'success', 'error');\n  notification.remove();\n}\n\nfunction addEmployee({ name, position, office, age, salary }) {\n  tBody.insertAdjacentHTML(\n    'beforeend',\n    `<tr>\n      <td>${name}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${formatSalary(salary)}</td>\n    </tr>`\n  );\n}\n\nfunction saveValue(cell, input, defaultValue) {\n  cell.textContent = input.value || defaultValue;\n}\n\nfunction handleTableHeadClick(e) {\n  const clickedLabel = headerCells.indexOf(e.target);\n\n  if (sortColumn !== e.target) {\n    sortOrder = 'ASC';\n  }\n\n  sortColumn = e.target;\n\n  if (sortOrder === 'ASC') {\n    rows.sort((a, b) => {\n      const firstValue = a.cells[clickedLabel].innerText;\n      const secondValue = b.cells[clickedLabel].innerText;\n      const number1 = convertToNumber(firstValue);\n      const number2 = convertToNumber(secondValue);\n\n      if (isNaN(number1) || isNaN(number2)) {\n        return firstValue.localeCompare(secondValue);\n      }\n\n      return number1 - number2;\n    });\n  } else {\n    rows.reverse();\n  }\n\n  table.tBodies[0].append(...rows);\n  sortOrder = 'DESC';\n}\n\nfunction handleTableRowClick(e) {\n  const clickedRow = e.target.parentNode;\n\n  rows.forEach((row) => {\n    if (row === clickedRow) {\n      row.classList.add('active');\n    } else {\n      row.classList.remove('active');\n    }\n  });\n}\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const elements = [...e.target.elements];\n  const errors = [];\n  const formData = {};\n\n  elements.forEach((formElement) => {\n    if (!['INPUT', 'SELECT'].includes(formElement.tagName)) {\n      return;\n    }\n\n    const { name, value, required, minLength, min, max } = formElement;\n\n    if (required && !value) {\n      errors.push(`${name} is required`);\n    } else if (minLength && value.length < minLength) {\n      errors.push(`${name} should have at least ${minLength} characters`);\n    } else if (parseFloat(min, 10) && value < parseFloat(min, 10)) {\n      errors.push(`${name} should not be lower than ${min}`);\n    } else if (parseFloat(max, 10) && value > parseFloat(max, 10)) {\n      errors.push(`${name} should not be greater than ${max}`);\n    }\n\n    formData[name] = value;\n  });\n\n  if (errors.length) {\n    showNotification({\n      type: 'error',\n      title: 'Validation error',\n      message: errors.join('<br />'),\n    });\n  } else {\n    addEmployee(formData);\n\n    showNotification({\n      type: 'success',\n      title: 'Success',\n      message: 'Employee added successfully',\n    });\n    form.reset();\n  }\n}\n\nfunction handleFinishEdit(e, defaultValue) {\n  const input = e.target;\n  const cell = input.parentNode;\n\n  if (e.type === 'keyup' && e.keyCode !== 13) {\n    return;\n  }\n\n  saveValue(cell, input, defaultValue);\n}\n\nfunction handleTableCellDblclick(e) {\n  const cell = e.target;\n  const input = document.createElement('input');\n  const defaultValue = cell.textContent;\n\n  input.classList.add('.cell-input');\n  input.value = defaultValue;\n  cell.textContent = '';\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('blur', (inputEvent) =>\n    handleFinishEdit(inputEvent, defaultValue)\n  );\n\n  input.addEventListener('keyup', (inputEvent) =>\n    handleFinishEdit(inputEvent, defaultValue)\n  );\n}\n\n/**\n * Event listeners\n */\ntHeader.addEventListener('click', handleTableHeadClick);\ntBody.addEventListener('click', handleTableRowClick);\ntBody.addEventListener('dblclick', handleTableCellDblclick);\nform.addEventListener('submit', handleFormSubmit);\n"]}